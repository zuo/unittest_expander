Changes
=======

0.X.X (2021-11-XX)
------------------

* From now on, the following versions of Python are supported: **3.5**
  through **3.10**, as well as **2.7**. *Note:* the versions 2.6, 3.2,
  3.3 and 3.4 are *no longer* officially supported.

* Now, if two (or more) parameter collections are combined to make a
  Cartesian product of them (as an effect of decorating a test with
  two or more **foreach(...)** invocations), and a conflict is detected
  between any *keyword arguments* previously used to create **param**
  instances that are now combined, then the **expand** decorator raises
  **ValueError** (in older versions of *unittest_expander* no exception
  was raised; instead, a keyword argument being a component of one
  **param** was silently overwritten by the corresponding keyword
  argument being a component of the other **param**).

* When it comes to **param.context()** (and **paramseq.context()**),
  now the standard Python context manager's mechanism of suppressing
  exceptions by making **__exit__()** return a *true* value is,
  by default, consistently *disabled* (i.e. exceptions are *not*
  suppressed, as it could easily become a cause of silent test bugs; the
  previous behavior was inconsistent: exceptions could be suppressed in
  the case of applying **foreach()** decorators to test *methods*, but
  not in the case of applying them to test *classes*).

  If needed, the possibility of suppressing exceptions by **__exit__()**
  returning a *true* value can be explicitly *enabled* on a per case by
  case basis by passing ``__enable_exc_suppress__=True`` to
  **param.context()** (or **paramseq.context()**).

* **Deprecation notice:** decorating test *classes* with **foreach()**
  -- to generate new, parameterized, test *classes* -- is now deprecated
  (causing emission of a **DeprecationWarning**); in future versions of
  *unittest_expander* it will either be **unsupported** or (later) have
  a **different meaning**; the current shape of the feature is deemed
  broken by design (in particular, because of the lack of composability,
  that becomes apparent when it comes to class inheritance...).

* **Deprecation notice:** using a *tuple* as a parameter collection
  passed as the *sole* argument to **paramseq()** or **foreach()**
  is now deprecated (causing emission of a **DeprecationWarning**);
  in future versions of *unittest_expander* it will either be
  **unsupported** or (later) have a **different meaning** (namely:
  acting as the only *item* of the specified parameter collection).

* A bugfix: now test methods with *keyword-only* arguments and/or *type
  annotations* are supported (previously a **ValueError** was raised by
  **expand()** if such a method was decorated with **foreach()**).
  The background is that for Python 3.x, from now on,
  **inspect.getfullargspec()** (instead of the legacy
  **inspect.getargspec()**) is used to inspect test method signatures.

* A compatibility fix: now standard *abstract base classes* of
  collections are imported from ``collections.abc``; an import from
  ``collections`` is performed only as a fallback (relevant to Python
  2.7).

* Two bugfixes related to the **expand()** decorator:

  (1) now classes (type objects) and **Substitute** objects are
  skipped when scanning a test class for attributes that have
  **foreach()**-created marks;

  (2) **foreach()**-created marks are no longer retained on
  parameterized test methods generated by the **expand()**'s machinery.

  Therefore, it is now possible to apply **expand()** to subclasses of
  an **expand()**-ed class -- provided that **foreach()** has been
  applied only to test *methods* (not to test *classes*, which is a
  deprecated feature anyway -- see the *deprecation notice* above).

* A few bugfixes related to applying **foreach()** to test classes
  (which is a deprecated feature -- see the *deprecation notice* above):

  (1) a **foreach()**-decorated test class which does not inherit from
  **unittest.TestCase** is no longer required to provide its own
  implementations of **setUp()** and **tearDown()** (previously
  **setUp()** and **tearDown()** provided by classes derived with
  **expand()** from such a class raised an **AttributeError**);

  (2) now the ``context_targets`` attribute is set (to an empty list)
  also if there are no contexts (making it possible for a test code to
  refer to ``self.context_targets`` without fear of **AttributeError**);

  (3) now a *context*'s **__exit__()** is never called without the
  corresponding **__enter__()** call being successful.

* A few really minor behavioral changes/improvements (in particular, now
  a *callable* parameter collection is required to satisfy the built-in
  **callable(...)** predicate, instead of the previously checked
  **isinstance(..., collections.Callable)** condition).

* A bunch of tests-and/or-documentation-related updates, fixes and
  improvements.

* A new GitHub workflow has been added: *Install and Test*.

* A few package-setup-related updates/improvements (in particular, the
  ``pyproject.toml`` and ``setup.cfg`` files have been added and the
  ``setup.py`` file has been removed).

* The `.gititnore` and `.editorconfig` files have been added.

* TBD?...

**Many thanks** to:

* `@KOLANICH <https://github.com/KOLANICH>`_
* `Hugo van Kemenade (@hugovk) <https://github.com/hugovk>`_
* `John Vandenberg (@jayvdb) <https://github.com/jayvdb>`_

for their contribution to this release!


0.3.1 (2014-08-19)
------------------

* Several tests/documentation-related fixes and improvements.


0.3.0 (2014-08-17)
------------------

* Improved signatures of the **foreach()** decorator and the
  **paramseq** constructor: they take either exactly one positional
  argument which must be a test parameter collection (as previously: a
  sequence/mapping/set or a **paramseq** instance, or a callable
  returning an iterable...), or *any number of positional and/or keyword
  arguments* being test parameters (singular parameter values, tuples of
  parameter values or **param** instances...).  For example,
  ``@foreach([1, 42])`` can now also be spelled as ``@foreach(1, 42)``.

* Several tests/documentation-related updates, fixes and improvements.


0.2.1 (2014-08-12)
------------------

* Important setup/configuration fixes (repairing 0.2.0 regressions):

  * a setup-breaking bug in *setup.py* has been fixed;
  * a bug in the configuration of Sphinx (the tool used to generate
    the documentation) has been fixed.

* Some setup-related cleanups.


0.2.0 (2014-08-11)
------------------

* Now **unittest_expander** is a one-file module, not a directory-based
  package.

* Some documentation improvements and updates.

* Some library setup improvements and refactorings.


0.1.2 (2014-08-01)
------------------

* The signatures of the **foreach()** decorator and the **paramseq**
  constructor have been unified.

* Tests/documentation-related updates and improvements.


0.1.1 (2014-07-29)
------------------

* Minor tests/documentation-related improvements.


0.1.0 (2014-07-29)
------------------

* Initial release.
